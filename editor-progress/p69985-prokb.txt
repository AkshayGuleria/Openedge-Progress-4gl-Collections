----------------------------------------------------------------------
KB-P69985: How to left pad a numeric character field of "X(7)" with blanks and make it align in a browse and st
----------------------------------------------------------------------

Status: Unverified

GOAL:

How to left pad a numeric character field of "X(7)" with blanks and
make it align in a browse and store the padded string in the database.

FACT(s) (Environment):

Windows
Progress 9.x

CAUSE:

&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v9r12 GUI
&ANALYZE-RESUME
/* Connected Databases 
sp2000 PROGRESS
*/
&Scoped-define WINDOW-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS C-Win 
/*------------------------------------------------------------------------

File: 

Description: 

Input Parameters:
<none>

Output Parameters:
<none>

Author: 

Created: 

------------------------------------------------------------------------*/
/* This .W file was created with the Progress AppBuilder. */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
by this procedure. This is a good default which assures
that this procedure's triggers and internal procedures 
will execute in this procedure's storage, and that proper
cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* *************************** Definitions **************************
*/

/* Parameters Definitions --- */

/* Local Variable Definitions --- */
DEFINE VARIABLE r AS ROWID NO-UNDO.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ******************** Preprocessor Definitions ********************
*/

&Scoped-define PROCEDURE-TYPE Window
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query */
&Scoped-define FRAME-NAME DEFAULT-FRAME
&Scoped-define BROWSE-NAME BROWSE-1

/* Internal Tables (found by Frame, Query & Browse Queries) */
&Scoped-define INTERNAL-TABLES Customer

/* Definitions for BROWSE BROWSE-1 */
&Scoped-define FIELDS-IN-QUERY-BROWSE-1 Customer.Name Customer.CustNum
~
Customer.cCustNum Customer.Country 
&Scoped-define ENABLED-FIELDS-IN-QUERY-BROWSE-1 Customer.cCustNum 
&Scoped-define ENABLED-TABLES-IN-QUERY-BROWSE-1 Customer
&Scoped-define FIRST-ENABLED-TABLE-IN-QUERY-BROWSE-1 Customer
&Scoped-define QUERY-STRING-BROWSE-1 FOR EACH Customer NO-LOCK
INDEXED-REPOSITION
&Scoped-define OPEN-QUERY-BROWSE-1 OPEN QUERY BROWSE-1 FOR EACH
Customer NO-LOCK INDEXED-REPOSITION.
&Scoped-define TABLES-IN-QUERY-BROWSE-1 Customer
&Scoped-define FIRST-TABLE-IN-QUERY-BROWSE-1 Customer


/* Definitions for FRAME DEFAULT-FRAME */
&Scoped-define OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME ~
~{&OPEN-QUERY-BROWSE-1}

/* Standard List Definitions */
&Scoped-Define ENABLED-OBJECTS BROWSE-1 

/* Custom List Definitions */
/* List-1,List-2,List-3,List-4,List-5,List-6 */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME


/* ************************ Function Prototypes **********************
*/

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD padit C-Win 
FUNCTION padit RETURNS CHARACTER
( INPUT c AS CHARACTER) FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* *********************** Control Definitions **********************
*/

/* Define the widget handle for the window */
DEFINE VAR C-Win AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets */
/* Query definitions */
&ANALYZE-SUSPEND
DEFINE QUERY BROWSE-1 FOR 
Customer SCROLLING.
&ANALYZE-RESUME

/* Browse definitions */
DEFINE BROWSE BROWSE-1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS BROWSE-1 C-Win
_STRUCTURED
QUERY BROWSE-1 NO-LOCK DISPLAY
Customer.Name FORMAT "x(30)":U
Customer.CustNum FORMAT ">>>>9":U WIDTH 12.4
Customer.cCustNum FORMAT "X(7)":U WIDTH 13.4
Customer.Country FORMAT "x(20)":U WIDTH 18.4
ENABLE
Customer.cCustNum
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
WITH NO-ROW-MARKERS SEPARATORS SIZE 79 BY 9.29
FONT 0 EX.PANDABLE.


/* ************************ Frame Definitions ***********************
*/

DEFINE FRAME DEFAULT-FRAME
BROWSE-1 AT ROW 3.14 COL 14
WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
SIDE-LABELS NO-UNDERLINE THREE-D 
AT COL 1 ROW 1
SIZE 103.8 BY 15.43.


/* *********************** Procedure Settings ************************
*/

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
Type: Window
Allow: Basic,Browse,DB-Fields,Window,Query
Other Settings: COMPILE
*/
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* ************************* Create Window **************************
*/

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
CREATE WINDOW C-Win ASSIGN
HIDDEN = YES
TITLE = "<insert window title>"
HEIGHT = 15.43
WIDTH = 103.8
MAX-HEIGHT = 16
MAX-WIDTH = 103.8
VIRTUAL-HEIGHT = 16
VIRTUAL-WIDTH = 103.8
RESIZE = yes
SCROLL-BARS = no
STATUS-AREA = no
BGCOLOR = ?
FGCOLOR = ?
KEEP-FRAME-Z-ORDER = yes
THREE-D = yes
MESSAGE-AREA = no
SENSITIVE = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION */
&ANALYZE-RESUME



/* *********** Runtime Attributes and AppBuilder Settings ***********
*/

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW C-Win
VISIBLE,,RUN-PERSISTENT */
/* SETTINGS FOR FRAME DEFAULT-FRAME
*/
/* BROWSE-TAB BROWSE-1 1 DEFAULT-FRAME */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
THEN C-Win:HIDDEN = no.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields */

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE BROWSE-1
/* Query rebuild information for BROWSE BROWSE-1
_TblList = "sp2000.Customer"
_Options = "NO-LOCK INDEXED-REPOSITION"
_FldNameList[1] = sp2000.Customer.Name
_FldNameList[2] > sp2000.Customer.CustNum
"CustNum" ? ? "integer" ? ? ? ? ? ? no ? no no "12.4" yes no no "U" ""
""
_FldNameList[3] > sp2000.Customer.cCustNum
"cCustNum" ? ? "character" ? ? ? ? ? ? yes ? no no "13.4" yes no no
"U" "" ""
_FldNameList[4] > sp2000.Customer.Country
"Country" ? ? "character" ? ? ? ? ? ? no ? no no "16.4" yes no no "U"
"" ""
_Query is OPENED
*/ /* BROWSE BROWSE-1 */
&ANALYZE-RESUME





/* ************************ Control Triggers ************************
*/

&Scoped-define SELF-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON END-ERROR OF C-Win /* <insert window title> */
OR ENDKEY OF {&WINDOW-NAME} ANYWHERE DO:
/* This case occurs when the user presses the "Esc" key.
In a persistently run window, just ignore this. If we did not, the
application would exit. */
IF THIS-PROCEDURE:PERSISTENT THEN RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON WINDOW-CLOSE OF C-Win /* <insert window title> */
DO:
/* This event will close the window and terminate the procedure. */
APPLY "CLOSE":U TO THIS-PROCEDURE.
RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME BROWSE-1
&Scoped-define SELF-NAME BROWSE-1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BROWSE-1 C-Win
ON ROW-LEAVE OF BROWSE-1 IN FRAME DEFAULT-FRAME /* Browse 1 */
DO:
FIND CURRENT customer.
ASSIGN
cCustNum = cCustNum:SCREEN-VALUE IN BROWSE {&BROWSE-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME Customer.cCustNum
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL Customer.cCustNum BROWSE-1
_BROWSE-COLUMN C-Win
ON LEAVE OF Customer.cCustNum IN BROWSE BROWSE-1 /* cCustNum */
DO:
ASSIGN
SELF:SCREEN-VALU.E IN FRAME {&FRAME-NAME} = padit(SELF:SCREEN-VALUE).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK C-Win 


/* *************************** Main Block ***************************
*/

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames. */
ASSIGN CURRENT-WINDOW = {&WINDOW-NAME} 
THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to
*/
/* terminate it. */
ON CLOSE OF THIS-PROCEDURE 
RUN disable_UI.

/* Best default for GUI applications is... */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition. */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.
*/
MAIN-BLOCK:
DO ON ERROR UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:
RUN enable_UI.
IF NOT THIS-PROCEDURE:PERSISTENT THEN
WAIT-FOR CLOSE OF THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* ********************** Internal Procedures ***********************
*/

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI C-Win
_DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
Purpose: DISABLE the User Interface
Parameters: <none>
Notes: Here we clean-up the user-interface by deleting
dynamic widgets we have created and/or hide 
frames. This procedure is usually called when
we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
/* Delete the WINDOW we created */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
THEN DELETE WIDGET C-Win.
IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI C-Win
_DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
Purpose: ENABLE the User Interface
Parameters: <none>
Notes: Here we display/view/enable the widgets in the
user-interface. In addition, OPEN all queries
associated with each FRAME and BROWSE.
These statements here are based on the "Other 
Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
ENABLE BROWSE-1 
WITH FRAME DEFAULT-FRAME IN WINDOW C-Win.
{&OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME}
VIEW C-Win.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

/* ************************ Function Implementations *****************
*/

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION padit C-Win 
FUNCTION padit RETURNS CHARACTER
( INPUT c AS CHARACTER) :
/*------------------------------------------------------------------------------
Purpose: 
Notes: 
------------------------------------------------------------------------------*/

DEFINE VARIABLE cBlanks AS CHARACTER FORMAT "x(7)" NO-UNDO.
DEFINE VARIABLE cValue AS CHARACTER FORMAT "x(6)" NO-UNDO.

ASSIGN
cBlanks = FILL(CHR(32),7)
cValue = c
cValue = SUBSTRING(cBlanks,1,(7 - LENGTH(cValue))) + cValue.
RETURN cValue.
END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME.

FIX:

Follow the following steps to develop a sample solution to demonstrate
how to achieve the above tasks:

1. Connect to the sports2000 database.
2. Add a character field cCustNum with "X(7)" format.
3. Populate this field by running the following code from the
procedure editor:

FUNCTION padit RETURNS CHARACTER (INPUT i AS INTEGER).

DEFINE VARIABLE cBlanks AS CHARACTER FORMAT "x(7)" NO-UNDO.
DEFINE VARIABLE cValue AS CHARACTER FORMAT "x(6)" NO-UNDO.

ASSIGN
cBlanks = FILL(CHR(32),7)
cValue = STRING(i)
cValue = SUBSTRING(cBlanks,1,(7 - LENGTH(cValue))) + cValue.
RETURN cValue.
END FUNCTION.

FOR EACH customer:
ASSIGN
cCustNum = padit(custnum).
END.

4. Create a new window in the AppBuilder.
5. Drop a browse on the window against the Customer table with the
fields Name, CustNum cCustNum and Country Fields.
6. Change the browse font to a fixed font.
7. Define a function 'padit' using the following code:

FUNCTION padit RETURNS CHARACTER
( INPUT c AS CHARACTER) :
/*------------------------------------------------------------------------------
Purpose: 
Notes: 
------------------------------------------------------------------------------*/

DEFINE VARIABLE cBlanks AS CHARACTER FORMAT "x(7)" NO-UNDO.
DEFINE VARIABLE cValue AS CHARACTER FORMAT "x(6)" NO-UNDO.

ASSIGN
cBlanks = FILL(CHR(32),7)
cValue = c
cValue = SUBSTRING(cBlanks,1,(7 - LENGTH(cValue))) + cValue.
RETURN cValue.
END FUNCTION.

6. Write a LEAVE trigger for the cCustNum column to pad the entry
using the following code:

ON LEAVE OF Customer.cCustNum IN BROWSE BROWSE-1 /* cCustNum */
DO:
ASSIGN
SELF:SCREEN-VALUE IN FRAME {&FRAME-NAME} = padit(SELF:SCREEN-VALUE).
END.

7. Write a ROW-LEAVE trigger to assign the field to the database using
the following code:

ON ROW-LEAVE OF BROWSE-1 IN FRAME DEFAULT-FRAME /* Browse 1 */
DO:
FIND CURRENT customer.
ASSIGN
cCustNum = cCustNum:SCREEN-VALUE IN BROWSE {&BROWSE-NAME}.
END.

8. Save and run the window.

The whole code is attached in the note below.

